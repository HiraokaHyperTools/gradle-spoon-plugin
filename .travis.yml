language: android

jdk: oraclejdk8

before_install:
  # Download SDK
  - yes | sdkmanager "tools" &>/dev/null
  - yes | sdkmanager "platform-tools" &>/dev/null
  - yes | sdkmanager "platforms;android-28" &>/dev/null
  # Download emulator
  - yes | sdkmanager "platforms;android-21" &>/dev/null
  - yes | sdkmanager "system-images;android-21;default;x86_64" &>/dev/null
  # Update remaining dependencies and accept licenses
  - yes | sdkmanager --update &>/dev/null
  - yes | sdkmanager --licenses &>/dev/null
  # Setup emulator
  - echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;x86_64" -c 200M -f &>/dev/null
  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-accel -no-snapshot -no-window -camera-back none -camera-front none & &>/dev/null

install:
  - ./gradlew clean ktlintCheck build -s --scan
  - rm -rf ~/.m2/repository/com/jaredsburrows/gradle-spoon-plugin/ && ./gradlew publishMavenPublicationToMavenLocal -x test

before_script:
  # Make sure the emulator is available
  - android-wait-for-emulator

  # Turn off animations
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &

  # For Multidex issue for devices API < 19
  - adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
  - adb shell stop installd
  - adb shell start installd

  # Wake up
  - adb shell input keyevent 82 &

script:
  - cd test-app && ../gradlew clean spoonDebugAndroidTest checkReports -s --scan && cd -

after_success:
  - cd ..
  - .buildscript/deploy-snapshot.sh

branches:
  except:
    - gh-pages

sudo: true

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

env:
  global:
    - secure: "JQgm1Ej3Bor8viCShU3jxkTUVOqeISU9Gz1EE3qBjaIX8IXNMjBtht1bLAVxvIrv6Tt79g3Q+GAivErfB/x7XN/PfJaXHx7R1p6k1RZ6ZTx3hicN0089AZh9cKSDaEMDSmCuKK9808k1z1wtftYYKwG+8/o5CJ5wt8hUEI9uAjZys80bDttxu4N0Z9M4v7fwEgilOdyIRZlQJQUMfUZ9/sy6qCzOUtNyqWwMb6hrUvHrcI9dzbEUnadjyRaEzZzWZlmioe4DtTukvPwMVsQoRXw8ysRuW+upd2yIxz6Zce7GlMkT0WlsXdeLp/sAjjVByXFMeo8r8XoCVORYhj80oYY1KpY2jB7DhLTfVdNiPsKCWu53UvWus4C1q1O6B2biPBh6kcbBuOJ/AC3fL/ueHRL+/SRXcJjljKEVBZkoGkNqa3qmmSTliQ995Agu9m2OZ1C94soWhVzKnyhv1K2ll0n9IMXcC0zoVrkE+CLfBNVdyIF7MaE7iVVZkQyrL/InmEdafpA6kCFEdutxbG2cAToo0qYdx+bVXZc60iBHAzhvYtE1vIBiE3zwjOJL4/I48E8LPPr9EMLguJ9B8gyCxvwzLO+sZzQ9en05aPth1XNodeBGPQtFc+uS7t8fax30LwW2xn0ihInMdUBaeGvid4OhP7KHNoBxViRyR22kO+g="
    - secure: "ebVW3EUe3+uWDGuamrgkzlUpBRL3fSlyc1j0YjANhsE6M7WXH6t3eaIUeazoFY+w8ytuVYngflMkex85olzxNDgNRM24UXmez1Ht6N2k8LdPka8cGIpOH9oXw2R+hXeMSnfwIjyOeXDj0QkAe/4HaLOAJjVD42GLcK0fgKwJyF1xJp79eseHQJqFwfTkeVopMkfSLwaOMgAL0xD/zzgL5OxiA/6c7PRTa0V/Yt623GuBGWx2N58XR+kGyYNGecu2rsW3DyNAHsewz4JCnKuuOShA2Se39BFA7c5L+s8bWzW7SuE6sBX3zJjR4CnhTev5fUi7bQbZDxw9Ta8iaTt4Doxxf5i6lWe6afWL9oGnn4OS2kfTwXWta2HusiLkIzTs6xwp8W6oxwFPZ/XV3kG1GH7Z3Ol8UAeikFE9pZ6Cnsz9gC4O2bbLBRfDYzfDSoR4LL/wYZ/0PJMMKS5qGef/BAw/bpTmGUXOdXOZjnhmZO1dLykng9/OiVZNOmr8VcW0dnRE2pkZMDlN+Ka2c1+XIgjfS1l3aAzbWLdHz7muzzM8FEhhUXUhY1VJBnp7cYc60Rq8dqn5gWnfWaIMOLF9G4bJRBzozeGQOJ2lCGhWus8qXelH9RuZevx3rBnSsciWm94FQgqwOTb6LfO5XkdKaQ+Iyal4RE0SFYc/3CQaR8c="
    - secure: "J4f5FfH/tSLKG8FUfIPJCnyS8joBoJJitzy6lWXH3A/gaY5mAKJw7C66X5os1/tVIjgIWWBbEdXBx2M1NTQkjW6chJPitnJOvS/57x9N5cDiE5vtDw3pSeVQMQ2e2IzgmcrUVu2OCGUdw88lqCYSlA4ccf/xJ6mWMhfeEaGSsvng/bU99DdghG7UwvX4r/blv31zGepXTPCEY8whfZ+4LQv28rU07zarvRXioi0T5LSVwzDjbgsUH9QXbWRDbtsevEiJEOklgtMqC6GVuKG/0EowgG1aRqcYBw1muUQpJghmqNaNNgTlkNCfTHHVwc52tjZf2pYzxUAy1+AzNTlAegr7zgRTLFXqdlqbsRkQOfR/lx5oD/S4F12gH59m3I1rt0BHDxA70CiHyJMpf1KXCsHVH0iYttTqKowHB1isYOPNyRtKpRSdKu/mOOzapiLNGRIZAjo9gEqmkGjs/pfHEgCmlEzi2EqpA75eK1zUvZM5/RLpvVEODjjn3Imhp+zYgpk1Yp22eefiCU5HuFMJ6Ys/KGp48XLsrUuYFno4IPzd2zRpbMC8R2vZVJf7jXgemHhU0wG6D+drQA81S1SGN5NuBrmI+8zTlPxZjGNcpidx/G6h1/R/VTaZMj1LHoXrwVDa0/Ur4CSWHD/QNGVagHzMi2qIp1EVuarjYaKgLEc="
    - secure: "ZA5vrszftf66ppKG5L8mesMRkmsuIkxKWis5dLF/hoETI0SuaJldfbeb01L0xttI028JOXJ++1SmVr3noM2ZuLuINJ8TExPtmhpIf6ilGB5yHQLvhMpkb6oX29aXGTwKm66+HaMnmgLKVzYGd1kGpSLRJ2jgwmfijn1y+kS438z/IaA2nZgClxWsnEU3BG6+aZCYF4ZQSNVx8ymxV8TIROokNBf/hpHISBSrsQ4UV2VhWb5sj4it3/5YbrPcAlSRnbEaGVBztISH+oCqLX5FOydsrF2FSprjqe1Mr2wWkPKuJKBV6wr7c0wNlbushMVlKXA06Vf/QFVGWpj55wG2QhoX99/WMKwCERB9SosGcPpGr8LuPQ+SbcfRhf8vsWvUUNGO5apv1C6Y4rNOIZc+PuqA0OlSs7/gFEoxcNujlAHKwR70C7MHAgeXe+08mD7/SQEEM90svZr79SOVua7GqFcIx32X/abxPsfu7W6GzoeO4i043N3+gGUTwinet84YKHTQMnix+EPB8egTlj/5aFkIeY2ujGquidngybWzAdKLxE6UtKjqGT9Dhl1PdJbTaRICF03WX4qb35V1k3oFQ7wQ70w5HmR8KjbjE0XfX/63XaWoYeyxHWunyAlpvkiqoizjiFtRtPG37vZzqDltVZqPMXObfu7ZY53Ftp6CW/0="
